{
  "formatVersion": 1,
  "database": {
    "version": 18,
    "identityHash": "47abf565dac37f9b947a3864f1949793",
    "entities": [
      {
        "tableName": "billables",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `type` TEXT NOT NULL, `composition` TEXT, `unit` TEXT, `name` TEXT NOT NULL, `active` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "composition",
            "columnName": "composition",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unit",
            "columnName": "unit",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "deltas",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `action` TEXT NOT NULL, `modelName` TEXT NOT NULL, `modelId` TEXT NOT NULL, `field` TEXT, `synced` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "action",
            "columnName": "action",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "modelName",
            "columnName": "modelName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "modelId",
            "columnName": "modelId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "field",
            "columnName": "field",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "synced",
            "columnName": "synced",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_deltas_modelId",
            "unique": false,
            "columnNames": [
              "modelId"
            ],
            "createSql": "CREATE  INDEX `index_deltas_modelId` ON `${TABLE_NAME}` (`modelId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "diagnoses",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `description` TEXT NOT NULL, `searchAliases` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "searchAliases",
            "columnName": "searchAliases",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "encounters",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `memberId` TEXT NOT NULL, `identificationEventId` TEXT, `occurredAt` INTEGER NOT NULL, `preparedAt` INTEGER, `backdatedOccurredAt` INTEGER NOT NULL, `copaymentPaid` INTEGER, `diagnoses` TEXT NOT NULL, `visitType` TEXT, `claimId` TEXT NOT NULL, `patientOutcome` TEXT, `adjudicationState` TEXT, `adjudicatedAt` INTEGER, `adjudicationReason` TEXT, `revisedEncounterId` TEXT, `providerComment` TEXT, `submittedAt` INTEGER, `visitReason` TEXT, `inboundReferralDate` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`memberId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "memberId",
            "columnName": "memberId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "identificationEventId",
            "columnName": "identificationEventId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "occurredAt",
            "columnName": "occurredAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preparedAt",
            "columnName": "preparedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "backdatedOccurredAt",
            "columnName": "backdatedOccurredAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "copaymentPaid",
            "columnName": "copaymentPaid",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "diagnoses",
            "columnName": "diagnoses",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "visitType",
            "columnName": "visitType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "claimId",
            "columnName": "claimId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "patientOutcome",
            "columnName": "patientOutcome",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "adjudicationState",
            "columnName": "adjudicationState",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "adjudicatedAt",
            "columnName": "adjudicatedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "adjudicationReason",
            "columnName": "adjudicationReason",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "revisedEncounterId",
            "columnName": "revisedEncounterId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "providerComment",
            "columnName": "providerComment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "submittedAt",
            "columnName": "submittedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "visitReason",
            "columnName": "visitReason",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inboundReferralDate",
            "columnName": "inboundReferralDate",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_encounters_memberId",
            "unique": false,
            "columnNames": [
              "memberId"
            ],
            "createSql": "CREATE  INDEX `index_encounters_memberId` ON `${TABLE_NAME}` (`memberId`)"
          },
          {
            "name": "index_encounters_identificationEventId",
            "unique": false,
            "columnNames": [
              "identificationEventId"
            ],
            "createSql": "CREATE  INDEX `index_encounters_identificationEventId` ON `${TABLE_NAME}` (`identificationEventId`)"
          },
          {
            "name": "index_encounters_occurredAt",
            "unique": false,
            "columnNames": [
              "occurredAt"
            ],
            "createSql": "CREATE  INDEX `index_encounters_occurredAt` ON `${TABLE_NAME}` (`occurredAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "members",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "memberId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "encounter_items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `encounterId` TEXT NOT NULL, `quantity` INTEGER NOT NULL, `priceScheduleId` TEXT NOT NULL, `priceScheduleIssued` INTEGER NOT NULL, `stockout` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`priceScheduleId`) REFERENCES `price_schedules`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`encounterId`) REFERENCES `encounters`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "encounterId",
            "columnName": "encounterId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priceScheduleId",
            "columnName": "priceScheduleId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "priceScheduleIssued",
            "columnName": "priceScheduleIssued",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stockout",
            "columnName": "stockout",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_encounter_items_priceScheduleId",
            "unique": false,
            "columnNames": [
              "priceScheduleId"
            ],
            "createSql": "CREATE  INDEX `index_encounter_items_priceScheduleId` ON `${TABLE_NAME}` (`priceScheduleId`)"
          },
          {
            "name": "index_encounter_items_encounterId",
            "unique": false,
            "columnNames": [
              "encounterId"
            ],
            "createSql": "CREATE  INDEX `index_encounter_items_encounterId` ON `${TABLE_NAME}` (`encounterId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "price_schedules",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "priceScheduleId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "encounters",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "encounterId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "encounter_forms",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `encounterId` TEXT NOT NULL, `photoId` TEXT, `thumbnailId` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`photoId`) REFERENCES `photos`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`thumbnailId`) REFERENCES `photos`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`encounterId`) REFERENCES `encounters`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "encounterId",
            "columnName": "encounterId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "photoId",
            "columnName": "photoId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailId",
            "columnName": "thumbnailId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_encounter_forms_photoId",
            "unique": false,
            "columnNames": [
              "photoId"
            ],
            "createSql": "CREATE  INDEX `index_encounter_forms_photoId` ON `${TABLE_NAME}` (`photoId`)"
          },
          {
            "name": "index_encounter_forms_thumbnailId",
            "unique": false,
            "columnNames": [
              "thumbnailId"
            ],
            "createSql": "CREATE  INDEX `index_encounter_forms_thumbnailId` ON `${TABLE_NAME}` (`thumbnailId`)"
          },
          {
            "name": "index_encounter_forms_encounterId",
            "unique": false,
            "columnNames": [
              "encounterId"
            ],
            "createSql": "CREATE  INDEX `index_encounter_forms_encounterId` ON `${TABLE_NAME}` (`encounterId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "photos",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "photoId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "photos",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "thumbnailId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "encounters",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "encounterId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "identification_events",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `memberId` TEXT NOT NULL, `throughMemberId` TEXT, `occurredAt` INTEGER NOT NULL, `searchMethod` TEXT NOT NULL, `clinicNumber` INTEGER, `clinicNumberType` TEXT, `dismissed` INTEGER NOT NULL, `fingerprintsVerificationResultCode` INTEGER, `fingerprintsVerificationConfidence` REAL, `fingerprintsVerificationTier` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`memberId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`throughMemberId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "memberId",
            "columnName": "memberId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "throughMemberId",
            "columnName": "throughMemberId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "occurredAt",
            "columnName": "occurredAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "searchMethod",
            "columnName": "searchMethod",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "clinicNumber",
            "columnName": "clinicNumber",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "clinicNumberType",
            "columnName": "clinicNumberType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dismissed",
            "columnName": "dismissed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fingerprintsVerificationResultCode",
            "columnName": "fingerprintsVerificationResultCode",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "fingerprintsVerificationConfidence",
            "columnName": "fingerprintsVerificationConfidence",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "fingerprintsVerificationTier",
            "columnName": "fingerprintsVerificationTier",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_identification_events_memberId",
            "unique": false,
            "columnNames": [
              "memberId"
            ],
            "createSql": "CREATE  INDEX `index_identification_events_memberId` ON `${TABLE_NAME}` (`memberId`)"
          },
          {
            "name": "index_identification_events_throughMemberId",
            "unique": false,
            "columnNames": [
              "throughMemberId"
            ],
            "createSql": "CREATE  INDEX `index_identification_events_throughMemberId` ON `${TABLE_NAME}` (`throughMemberId`)"
          },
          {
            "name": "index_identification_events_occurredAt",
            "unique": false,
            "columnNames": [
              "occurredAt"
            ],
            "createSql": "CREATE  INDEX `index_identification_events_occurredAt` ON `${TABLE_NAME}` (`occurredAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "members",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "memberId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "throughMemberId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "members",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `enrolledAt` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `householdId` TEXT, `photoId` TEXT, `thumbnailPhotoId` TEXT, `photoUrl` TEXT, `cardId` TEXT, `name` TEXT NOT NULL, `gender` TEXT NOT NULL, `language` TEXT, `birthdate` TEXT NOT NULL, `birthdateAccuracy` TEXT NOT NULL, `fingerprintsGuid` TEXT, `phoneNumber` TEXT, `membershipNumber` TEXT, `medicalRecordNumber` TEXT, `needsRenewal` INTEGER, `relationshipToHead` TEXT, `archivedAt` INTEGER, `archivedReason` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`thumbnailPhotoId`) REFERENCES `photos`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`photoId`) REFERENCES `photos`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enrolledAt",
            "columnName": "enrolledAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "householdId",
            "columnName": "householdId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photoId",
            "columnName": "photoId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailPhotoId",
            "columnName": "thumbnailPhotoId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photoUrl",
            "columnName": "photoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cardId",
            "columnName": "cardId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "birthdate",
            "columnName": "birthdate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "birthdateAccuracy",
            "columnName": "birthdateAccuracy",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fingerprintsGuid",
            "columnName": "fingerprintsGuid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "membershipNumber",
            "columnName": "membershipNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "medicalRecordNumber",
            "columnName": "medicalRecordNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "needsRenewal",
            "columnName": "needsRenewal",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "relationshipToHead",
            "columnName": "relationshipToHead",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "archivedAt",
            "columnName": "archivedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "archivedReason",
            "columnName": "archivedReason",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_members_cardId",
            "unique": false,
            "columnNames": [
              "cardId"
            ],
            "createSql": "CREATE  INDEX `index_members_cardId` ON `${TABLE_NAME}` (`cardId`)"
          },
          {
            "name": "index_members_householdId",
            "unique": false,
            "columnNames": [
              "householdId"
            ],
            "createSql": "CREATE  INDEX `index_members_householdId` ON `${TABLE_NAME}` (`householdId`)"
          },
          {
            "name": "index_members_membershipNumber",
            "unique": false,
            "columnNames": [
              "membershipNumber"
            ],
            "createSql": "CREATE  INDEX `index_members_membershipNumber` ON `${TABLE_NAME}` (`membershipNumber`)"
          },
          {
            "name": "index_members_thumbnailPhotoId",
            "unique": false,
            "columnNames": [
              "thumbnailPhotoId"
            ],
            "createSql": "CREATE  INDEX `index_members_thumbnailPhotoId` ON `${TABLE_NAME}` (`thumbnailPhotoId`)"
          },
          {
            "name": "index_members_photoId",
            "unique": false,
            "columnNames": [
              "photoId"
            ],
            "createSql": "CREATE  INDEX `index_members_photoId` ON `${TABLE_NAME}` (`photoId`)"
          },
          {
            "name": "index_members_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "createSql": "CREATE  INDEX `index_members_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "photos",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "thumbnailPhotoId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "photos",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "photoId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "photos",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `bytes` BLOB NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bytes",
            "columnName": "bytes",
            "affinity": "BLOB",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "price_schedules",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `issuedAt` INTEGER NOT NULL, `billableId` TEXT NOT NULL, `price` INTEGER NOT NULL, `previousPriceScheduleId` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`billableId`) REFERENCES `billables`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "issuedAt",
            "columnName": "issuedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "billableId",
            "columnName": "billableId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "previousPriceScheduleId",
            "columnName": "previousPriceScheduleId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_price_schedules_billableId",
            "unique": false,
            "columnNames": [
              "billableId"
            ],
            "createSql": "CREATE  INDEX `index_price_schedules_billableId` ON `${TABLE_NAME}` (`billableId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "billables",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "billableId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "referrals",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `receivingFacility` TEXT NOT NULL, `reason` TEXT NOT NULL, `encounterId` TEXT NOT NULL, `number` TEXT, `date` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`encounterId`) REFERENCES `encounters`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "receivingFacility",
            "columnName": "receivingFacility",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reason",
            "columnName": "reason",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "encounterId",
            "columnName": "encounterId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "number",
            "columnName": "number",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_referrals_encounterId",
            "unique": false,
            "columnNames": [
              "encounterId"
            ],
            "createSql": "CREATE  INDEX `index_referrals_encounterId` ON `${TABLE_NAME}` (`encounterId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "encounters",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "encounterId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"47abf565dac37f9b947a3864f1949793\")"
    ]
  }
}