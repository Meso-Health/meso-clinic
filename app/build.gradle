apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    testBuildType "release"

    //building string config fields requires a double-quoted string
    def ENV = { k -> "\"${System.getenv(k)}\"" }

    defaultConfig {
        applicationId "org.watsi.uhp"
        minSdkVersion 21
        targetSdkVersion 22
        versionCode System.getenv("VERSION_CODE") as Integer
        versionName System.getenv("VERSION_NAME") as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "Integer", "PROVIDER_ID", System.getenv("PROVIDER_ID")
        buildConfigField "boolean", "USING_LOCAL_SERVER", "false"
        buildConfigField "boolean", "REPORT_TO_ROLLBAR", "true"
        buildConfigField "boolean", "CHECK_HOCKEYAPP", "true"
    }
    signingConfigs {
        debugConfig {
            storeFile file("debug-key.jks")
            storePassword System.getenv("DEBUG_KEYSTORE_PASSWORD")
            keyAlias System.getenv("DEBUG_KEY_ALIAS")
            keyPassword System.getenv("DEBUG_KEY_PASSWORD")
        }
        releaseConfig {
            storeFile file("release-key.jks")
            storePassword System.getenv("RELEASE_KEYSTORE_PASSWORD")
            keyAlias System.getenv("RELEASE_KEY_ALIAS")
            keyPassword System.getenv("RELEASE_KEY_PASSWORD")
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            signingConfig signingConfigs.debugConfig

            buildConfigField "boolean", "CHECK_HOCKEYAPP", "false"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    productFlavors {
        development {
            applicationIdSuffix ".development"
            versionNameSuffix "-development"
            resValue "string", "app_name", "UHP Dev"
            resValue "string", "main_activity_label", "UHP Dev"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_development"
            ]

            buildConfigField "boolean", "USING_LOCAL_SERVER", "true"
            buildConfigField "String", "API_HOST", ENV("DEVELOPMENT_API_HOST")
            buildConfigField "boolean", "REPORT_TO_ROLLBAR", "false"
            buildConfigField "String", "ROLLBAR_ENV_KEY", "null"
            buildConfigField "String", "ROLLBAR_API_KEY", "null"
            buildConfigField "boolean", "CHECK_HOCKEYAPP", "false"
            buildConfigField "String", "HOCKEYAPP_APP_ID", "null"
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("SANDBOX_SIMPRINTS_API_KEY")
        }
        sandbox {
            applicationIdSuffix ".sandbox"
            versionNameSuffix "-sandbox"
            resValue "string", "app_name", "UHP Sandbox"
            resValue "string", "main_activity_label", "UHP Sandbox"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_sandbox"
            ]

            buildConfigField "String", "API_HOST", ENV("SANDBOX_API_HOST")
            buildConfigField "String", "ROLLBAR_ENV_KEY", ENV("SANDBOX_ROLLBAR_ENV_KEY")
            buildConfigField "String", "ROLLBAR_API_KEY", ENV("ROLLBAR_API_KEY")
            buildConfigField "String", "HOCKEYAPP_APP_ID", ENV("SANDBOX_HOCKEYAPP_APP_ID")
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("SANDBOX_SIMPRINTS_API_KEY")
        }
        production {
            applicationIdSuffix ".production"
            versionNameSuffix "-production"
            resValue "string", "app_name", "UHP"
            resValue "string", "main_activity_label", "UHP"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher"
            ]

            buildConfigField "String", "API_HOST", ENV("PRODUCTION_API_HOST")
            buildConfigField "String", "ROLLBAR_ENV_KEY", ENV("PRODUCTION_ROLLBAR_ENV_KEY")
            buildConfigField "String", "ROLLBAR_API_KEY", ENV("ROLLBAR_API_KEY")
            buildConfigField "String", "HOCKEYAPP_APP_ID", ENV("PRODUCTION_HOCKEYAPP_APP_ID")
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("PRODUCTION_SIMPRINTS_API_KEY")
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.j256.ormlite:ormlite-core:5.0'
    compile 'com.j256.ormlite:ormlite-android:5.0'
    compile 'com.rollbar:rollbar-android:0.2.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.google.android.gms:play-services-vision:9.4.0'
    compile 'me.xdrop:fuzzywuzzy:1.1.6'
    compile 'me.philio:pinentryview:1.0.6'
    compile 'com.simprints:LibSimprints:1.0.6'
    compile 'net.hockeyapp.android:HockeySDK:4.1.2'
    compile 'com.google.guava:guava:20.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}
