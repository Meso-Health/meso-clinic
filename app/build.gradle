apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26

    // building string config fields requires a double-quoted string
    // For non-strings in buildConfigField, use System.getenv instead of ENV.
    def ENV = { k -> "\"${System.getenv(k)}\"" }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "org.watsi.uhp"
        minSdkVersion 21
        targetSdkVersion 22
        multiDexEnabled true
        versionCode System.getenv("VERSION_CODE") as Integer
        versionName System.getenv("VERSION_NAME") as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "Integer", "PROVIDER_ID", "1"
        buildConfigField "boolean", "USING_LOCAL_SERVER", "false"
        buildConfigField "boolean", "REPORT_TO_ROLLBAR", "true"
        buildConfigField "boolean", "SHOULD_CHECK_FOR_UPDATES", "true"
        buildConfigField "String", "ROLLBAR_API_KEY", ENV("ROLLBAR_API_KEY")
    }
    signingConfigs {
        releaseConfig {
            storeFile file("release-key.jks")
            storePassword System.getenv("RELEASE_KEYSTORE_PASSWORD")
            keyAlias System.getenv("RELEASE_KEY_ALIAS")
            keyPassword System.getenv("RELEASE_KEY_PASSWORD")
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "SHOULD_CHECK_FOR_UPDATES", "false"
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    flavorDimensions "default"
    productFlavors {
        development {
            applicationIdSuffix ".development"
            versionNameSuffix "-development"
            resValue "string", "app_name", "UHP Dev"
            resValue "string", "main_activity_label", "UHP Dev"
            resValue "string", "application_id", defaultConfig.applicationId + applicationIdSuffix
            resValue "color", "colorPrimary", "#868E96" // gray
            resValue "color", "colorPrimaryDark", "#343A40"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_development"
            ]

            buildConfigField "boolean", "USING_LOCAL_SERVER", "true"
            buildConfigField "String", "API_HOST", ENV("DEVELOPMENT_API_HOST")
            buildConfigField "boolean", "REPORT_TO_ROLLBAR", "false"
            buildConfigField "boolean", "SHOULD_CHECK_FOR_UPDATES", "false"
            buildConfigField "String", "HOCKEYAPP_APP_ID", "null"
            buildConfigField "String", "ROLLBAR_API_KEY", "null"
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("SANDBOX_SIMPRINTS_API_KEY")
        }
        sandbox {
            applicationIdSuffix ".sandbox"
            versionNameSuffix "-sandbox"
            resValue "string", "app_name", "UHP Sandbox"
            resValue "string", "main_activity_label", "UHP Sandbox"
            resValue "string", "application_id", defaultConfig.applicationId + applicationIdSuffix
            resValue "color", "colorPrimary", "#FCAF63" // beige
            resValue "color", "colorPrimaryDark", "#E89746"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_sandbox"
            ]
            buildConfigField "String", "API_HOST", ENV("SANDBOX_API_HOST")
            buildConfigField "String", "HOCKEYAPP_APP_ID", ENV("SANDBOX_HOCKEYAPP_APP_ID")
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("SANDBOX_SIMPRINTS_API_KEY")
        }
        spec {
            applicationIdSuffix ".spec"
            versionNameSuffix "-spec"
            resValue "string", "app_name", "UHP Spec"
            resValue "string", "main_activity_label", "UHP Spec"
            resValue "string", "application_id", defaultConfig.applicationId + applicationIdSuffix
            resValue "color", "colorPrimary", "#F4C2C2" // pink
            resValue "color", "colorPrimaryDark", "#E09F9F"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_spec"
            ]

            buildConfigField "boolean", "USING_LOCAL_SERVER", "true"
            buildConfigField "String", "API_HOST", ENV("SPEC_API_HOST")
            buildConfigField "boolean", "REPORT_TO_ROLLBAR", "false"
            buildConfigField "boolean", "SHOULD_CHECK_FOR_UPDATES", "false"
            buildConfigField "String", "HOCKEYAPP_APP_ID", "null"
            buildConfigField "String", "ROLLBAR_API_KEY", "null"
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("SANDBOX_SIMPRINTS_API_KEY")
        }
        demo {
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
            resValue "string", "app_name", "UHP Demo"
            resValue "string", "main_activity_label", "UHP Demo"
            resValue "string", "application_id", defaultConfig.applicationId + applicationIdSuffix
            resValue "color", "colorPrimary", "#329AF0" // Watsi blue
            resValue "color", "colorPrimaryDark", "#1C7CD6"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher"
            ]

            buildConfigField "String", "API_HOST", ENV("DEMO_API_HOST")
            buildConfigField "String", "HOCKEYAPP_APP_ID", ENV("DEMO_HOCKEYAPP_APP_ID")
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("SANDBOX_SIMPRINTS_API_KEY")
        }
        training {
            applicationIdSuffix ".training"
            versionNameSuffix "-training"
            resValue "string", "app_name", "UHP Training"
            resValue "string", "main_activity_label", "UHP Training"
            resValue "string", "application_id", defaultConfig.applicationId + applicationIdSuffix
            resValue "color", "colorPrimary", "#329AF0" // Watsi blue
            resValue "color", "colorPrimaryDark", "#1C7CD6"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_training"
            ]

            buildConfigField "Integer", "PROVIDER_ID", "1"
            buildConfigField "String", "API_HOST", ENV("DEMO_API_HOST")
            buildConfigField "String", "HOCKEYAPP_APP_ID", ENV("TRAINING_HOCKEYAPP_APP_ID")
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("SANDBOX_SIMPRINTS_API_KEY")
        }
        production {
            applicationIdSuffix ".production"
            versionNameSuffix "-production"
            resValue "string", "app_name", "UHP"
            resValue "string", "main_activity_label", "UHP"
            resValue "string", "application_id", defaultConfig.applicationId + applicationIdSuffix
            resValue "color", "colorPrimary", "#329AF0" // Watsi blue
            resValue "color", "colorPrimaryDark", "#1C7CD6"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher"
            ]

            buildConfigField "String", "API_HOST", ENV("PRODUCTION_API_HOST")
            buildConfigField "String", "HOCKEYAPP_APP_ID", ENV("PRODUCTION_HOCKEYAPP_APP_ID")
            buildConfigField "String", "SIMPRINTS_API_KEY", ENV("PRODUCTION_SIMPRINTS_API_KEY")
        }
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
}

dependencies {
    def dependencies = rootProject.ext.dependencies
    def testDependencies = rootProject.ext.testDependencies

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Dependency injection
    implementation dependencies.dagger
    implementation dependencies.daggerAndroidSupport
    kapt dependencies.daggerAndroidProcessor
    kapt dependencies.daggerCompiler
    kaptTest dependencies.daggerCompiler
    kaptAndroidTest dependencies.daggerCompiler

    implementation 'com.j256.ormlite:ormlite-core:5.0'
    implementation 'com.j256.ormlite:ormlite-android:5.0'
    implementation 'com.rollbar:rollbar-android:0.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.google.android.gms:play-services-vision:9.4.0'
    implementation 'me.xdrop:fuzzywuzzy:1.1.9'
    implementation 'me.philio:pinentryview:1.0.6'
    implementation 'com.simprints:LibSimprints:1.0.11'
    implementation 'net.hockeyapp.android:HockeySDK:4.1.2'
    implementation 'com.google.guava:guava:20.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.0.0-RC1'

    // Libs for testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.powermock:powermock:1.6.5'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.5'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.5'
    testImplementation "org.powermock:powermock-module-junit4-rule:1.6.5"
    testImplementation "org.powermock:powermock-classloading-xstream:1.6.5"

    testImplementation 'org.robolectric:robolectric:3.3.2'
    testImplementation 'org.robolectric:shadows-support-v4:3.3.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    debugImplementation 'com.airbnb.okreplay:okreplay:1.3.0'
    releaseImplementation 'com.airbnb.okreplay:noop:1.3.0'
    testImplementation 'com.airbnb.okreplay:junit:1.3.0'
    androidTestImplementation 'com.airbnb.okreplay:espresso:1.3.0'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}
repositories {
    mavenCentral()
}
